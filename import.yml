---
- name: Export config as code info from AWX, AAP, or Ascender
  #hosts: save-files
  hosts: localhost
  gather_facts: false
  vars:
    controller_configuration_inventories_enforce_defaults: true
  
    export_objects: 
      - testing_value
#      - applications #failed
      - credentials #some work some fail
#      - credential_types #works
#      - execution_environments #failed conditional
#      - inventory #works
#      - inventory_sources #fails
#      - job_templates
#      - notification_templates
#      - organizations #fails
#      - projects #fails
#      - schedules #fails
#      - teams #works
#      - users #works
#      - workflow_job_templates
  
  environment:
    CONTROLLER_HOST: "https://{{ import_host }}"
    CONTROLLER_USERNAME: "{{ gen2_user }}"
    CONTROLLER_PASSWORD: "{{ gen2_pword }}"
    CONTROLLER_VERIFY_SSL: False

  tasks:
  - name: check if credential-types file exists
    ansible.builtin.stat:
      path: "{{ playbook_dir }}/credential-types-fix.sh"
    register: cred_type_check

  - name: fix credential-types file block
    when: cred_type_check.stat.exists
    block:
    - name: Change file permissions on credential-type shell script
      ansible.builtin.file:
        path: "{{ playbook_dir }}/credential-types-fix.sh"
        mode: '0777'

    - name: use shell script to modify credentail types file
      ansible.builtin.shell: "{{ playbook_dir }}/credential-types-fix.sh {{ playbook_dir }}/configs/credential_types.yml"

  - name: Include vars from config folder
    ansible.builtin.include_vars:
      # file: inventory.yml
      dir: configs

  - name: Filter out users we don't want imported - user import fix
    when: users is defined
    set_fact:
      users: "{{ users | rejectattr('natural_key.username', 'equalto', 'admin') | list }}"


  - name: debug data
    ansible.builtin.debug:
      # var: inventory.variables
      var: credential_types
      #msg: "{{ credential_types }}"
      

  - name: Add organizations
    when: item == "organizations"
    ansible.builtin.include_role:
      name: organizations
    loop: "{{ export_objects }}"

  - name: Add teams
    when: item == "teams"
    ansible.builtin.include_role:
      name: teams
    loop: "{{ export_objects }}"

  - name: Add users
    when: item == "users"
    ansible.builtin.include_role:
      name: users
    loop: "{{ export_objects }}"

  - name: Add credential types
    when: item == "credential_types"
    ansible.builtin.include_role:
      name: credential_types
    loop: "{{ export_objects }}"

  - name: Add credentials
    when: item == "credentials"
    ansible.builtin.include_role:
      name: credentials
    loop: "{{ export_objects }}"

  - name: Add inventory
    when: item == "inventory"
    ansible.builtin.include_role:
      # name: infra.controller_configuration.inventories
      name: inventories
    loop: "{{ export_objects }}"

  - name: Add inventory sources
    when: item == "inventory_sources"
    ansible.builtin.include_role:
      name: inventory_sources
    loop: "{{ export_objects }}"

  - name: Add applications
    when: item == "applications"
    ansible.builtin.include_role:
      name: applications
    loop: "{{ export_objects }}"

  - name: Add execution_environments
    when: item == "execution_environments"
    ansible.builtin.include_role:
      name: execution_environments
    loop: "{{ export_objects }}"

  - name: Add projects
    when: item == "projects"
    ansible.builtin.include_role:
      name: projects
    loop: "{{ export_objects }}"

  - name: Add schedules
    when: item == "schedules"
    ansible.builtin.include_role:
      name: schedules
    loop: "{{ export_objects }}"

  - name: Add job_templates
    when: item == "job_templates"
    ansible.builtin.include_role:
      name: job_templates
    loop: "{{ export_objects }}"

  - name: Add workflow_job_templates
    when: item == "workflow_job_templates"
    ansible.builtin.include_role:
      name: workflow_job_templates
    loop: "{{ export_objects }}"

  - name: Add notification_templates
    when: item == "notification_templates"
    ansible.builtin.include_role:
      name: notification_templates
    loop: "{{ export_objects }}"
