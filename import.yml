---
- name: Export config as code info from AWX, AAP, or Ascender
  #hosts: save-files
  hosts: localhost
  gather_facts: false
  vars:
    controller_configuration_inventories_enforce_defaults: true
  
    export_objects: 
      - testing_value
      # - applications #works
      # - credentials #works
      # - credential_types #works
      # - execution_environments #works.  Had to fake a var for a conditional check
      # - projects #works
      # - inventory #works
      # - inventory_sources #works
      # - job_templates #works
      # - notification_templates #passed
      # - organizations #works
      # - teams #works
      # - users #works
      # - workflow_job_templates #works
      # - schedules #works
  
  environment:
    CONTROLLER_HOST: "https://{{ import_host }}"
    CONTROLLER_USERNAME: "{{ gen2_user }}"
    CONTROLLER_PASSWORD: "{{ gen2_pword }}"
    CONTROLLER_VERIFY_SSL: False

  tasks:
  - name: check if credential-types file exists
    ansible.builtin.stat:
      path: "{{ playbook_dir }}/credential-types-fix.sh"
    register: cred_type_check

  - name: fix credential-types file block
    when: cred_type_check.stat.exists
    block:
    - name: Change file permissions on credential-type shell script
      ansible.builtin.file:
        path: "{{ playbook_dir }}/credential-types-fix.sh"
        mode: '0777'

    - name: use shell script to modify credentail types file
      ansible.builtin.shell: "{{ playbook_dir }}/credential-types-fix.sh {{ playbook_dir }}/configs/credential_types.yml"

  - name: Fix wokflow job templates by removing any lines with null
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/workflow_job_templates.yml"
      regexp: '.*null.*\n'
      replace: ''

  - name: Fix schedules by removing any lines with null
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/schedules.yml"
      regexp: '.*null.*\n'
      replace: ''

  - name: Fix project file by removing null credentials
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/projects.yml"
      regexp: ' +credential: null'
      replace: ''

  - name: Fix organizations by removing empty EE entries
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/organizations.yml"
      regexp: ' +execution_environments: \[\]'
      replace: ''

  - name: Fix organizations by removing null default environment
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/organizations.yml"
      regexp: ' +default_environment: null'
      replace: ''

  - name: Fix execution environments file by removing null organizations
    ansible.builtin.replace:
      path: "{{ playbook_dir }}/configs/execution_environments.yml"
      regexp: ' +organization: null'
      replace: ''

############# variable file imports
  - name: Include vars from config folder
    ansible.builtin.include_vars:
      # file: inventory.yml
      dir: configs
####################################

  # - name: Fix schedules variable - Filter out schedules based on provided names
  #   set_fact:
  #     schedules: "{{ schedules | selectattr('name', 'notin', schedules_to_remove) | list }}"
  - name: Filter out schedules based on provided names
    set_fact:
      schedules: "{{ schedules | rejectattr('name', 'in', schedules_to_remove) | list }}"
    vars:
      # List of schedule names to remove - all system default ones
      schedules_to_remove: 
        - 'Cleanup Job Schedule'
        - 'Cleanup Activity Schedule'
        - 'Cleanup Expired Sessions'
        - 'Cleanup Expired OAuth 2 Tokens'

  - name: Job templates fix - remove nulls and comments from extra_vars
    set_fact:
      job_templates: >-
        {{
          job_templates + [
            {
              'name': item.name,
              'extra_vars': (
                item.extra_vars
                | regex_replace('^\\s*#.*?$', '', multiline=True)
                | regex_replace('\\s+', ' ')
                | trim
                if item.extra_vars != 'null' else omit
              )
            }
          ]
        }}
    loop: "{{ job_templates }}"
    when: item.extra_vars is string and item.extra_vars | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 

  - name: Job templates fix - convert extra_vars to dictionary
    set_fact:
      job_templates: >-
        {{
          job_templates | map('combine', {
            'extra_vars': (item.extra_vars | from_yaml if item.extra_vars != 'null' else {})
          }) | list
        }}
    loop: "{{ job_templates }}"
    when: item.extra_vars is string and item.extra_vars | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 

  - name: Workflow job templates fix - remove nulls and comments from extra_vars
    set_fact:
      workflow_job_templates: >-
        {{
          workflow_job_templates + [
            {
              'name': item.name,
              'extra_vars': (
                item.extra_vars
                | regex_replace('^\\s*#.*?$', '', multiline=True)
                | regex_replace('\\s+', ' ')
                | trim
                if item.extra_vars != 'null' else omit
              )
            }
          ]
        }}
    loop: "{{ workflow_job_templates }}"
    when: item.extra_vars is string and item.extra_vars | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 

  - name: Workflow job templates fix - convert extra_vars to dictionary
    set_fact:
      workflow_job_templates: >-
        {{
          workflow_job_templates | map('combine', {
            'extra_vars': (item.extra_vars | from_yaml if item.extra_vars != 'null' else {})
          }) | list
        }}
    loop: "{{ workflow_job_templates }}"
    when: item.extra_vars is string and item.extra_vars | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 


  - name: Filter out users we don't want imported - user import fix
    when: users is defined
    set_fact:
      users: "{{ users | rejectattr('natural_key.username', 'equalto', 'admin') | list }}"

  - name: Reformat the organization entry in applications variable to fix applications.  role formatting is old and needs fixing, but this is a workaround
    set_fact:
      applications: "{{ applications | json_query(query) }}"
    vars:
      query: "[].{authorization_grant_type: authorization_grant_type, client_type: client_type, description: description, name: name, natural_key: natural_key, organization: organization.name, redirect_uris: redirect_uris, skip_authorization: skip_authorization}"

  - name: Fix EEs by modifying the credential field in the execution_environments variable.  The module doesn't recognize the current format
    when: item.credential.name is defined
    set_fact:
      execution_environments: "{{ execution_environments | map('combine', {'credential': item.credential.name}) | list }}"
    loop: "{{ execution_environments }}"

  # - name: Extract controller hosts
  #   set_fact:
  #     controller_hosts: "{{ controller_hosts | default([]) + [item] }}"
  #   loop: "{{ inventory.related.hosts }}"
  #   vars:
  #     item:
  #       description: "{{ host.description }}"
  #       enabled: "{{ host.enabled }}"
  #       inventory: "{{ host.inventory.name }}"
  #       name: "{{ host.name }}"
  #       variables:
  #         ansible_host: "{{ host.variables.ansible_host }}"

  - name: Initialize controller_hosts
    set_fact:
      controller_hosts: []

  - name: Extract and format hosts from inventory
    include_tasks: extract_hosts.yml
    loop: "{{ inventory }}"
    loop_control:
      loop_var: inventory_item

  - name: Flatten controller_hosts list
    set_fact:
      controller_hosts: "{{ controller_hosts | flatten }}"

  - name: create controller hosts -  remove nulls and comments from variables
    set_fact:
      controller_hosts: >-
        {{
          controller_hosts + [
            {
              'name': item.name,
              'variables': (
                item.variables
                | regex_replace('^\\s*#.*?$', '', multiline=True)
                | regex_replace('\\s+', ' ')
                | trim
                if item.variables != 'null' else omit
              )
            }
          ]
        }}
    loop: "{{ controller_hosts }}"
    when: item.variables is string and item.variables | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 

  - name: Workflow job templates fix - convert extra_vars to dictionary
    set_fact:
      controller_hosts: >-
        {{
          controller_hosts | map('combine', {
            'variables': (item.variables | from_yaml if item.variables != 'null' else {})
          }) | list
        }}
    loop: "{{ controller_hosts }}"
    when: item.variables is string and item.variables | length > 0
    #output his huge otherwise, so no log to keep it small
    no_log: true 


  - name: Debug the modified job_templates
    debug:
      var: controller_hosts

####### start importing




  - name: Add credential types
    when: item == "credential_types"
    ansible.builtin.include_role:
      name: credential_types
    loop: "{{ export_objects }}"

  - name: Add credentials
    when: item == "credentials"
    ansible.builtin.include_role:
      name: credentials
    loop: "{{ export_objects }}"

  - name: Add execution_environments
    when: item == "execution_environments"
    ansible.builtin.include_role:
      name: execution_environments
    loop: "{{ export_objects }}"
    vars:
      controller_execution_environments: 
        - food: tacos #weird conditional
          day: tuesday

  - name: Add organizations
    when: item == "organizations"
    ansible.builtin.include_role:
      name: organizations
    loop: "{{ export_objects }}"
    vars:
      controller_configuration_organizations_enforce_defaults: true


  - name: Add teams
    when: item == "teams"
    ansible.builtin.include_role:
      name: teams
    loop: "{{ export_objects }}"

  - name: Add users
    when: item == "users"
    ansible.builtin.include_role:
      name: users
    loop: "{{ export_objects }}"

  - name: Add projects
    when: item == "projects"
    ansible.builtin.include_role:
      name: projects
    loop: "{{ export_objects }}"

  - name: Add inventory
    when: item == "inventory"
    ansible.builtin.include_role:
      # name: infra.controller_configuration.inventories
      name: inventories
    loop: "{{ export_objects }}"

  - name: Add inventory sources
    when: item == "inventory_sources"
    ansible.builtin.include_role:
      name: inventory_sources
    loop: "{{ export_objects }}"

  - name: Add applications
    when: item == "applications"
    ansible.builtin.include_role:
      name: applications
    loop: "{{ export_objects }}"

  - name: Add job_templates
    when: item == "job_templates"
    ansible.builtin.include_role:
      name: job_templates
    loop: "{{ export_objects }}"

  - name: Add workflow_job_templates
    when: item == "workflow_job_templates"
    ansible.builtin.include_role:
      name: workflow_job_templates
    loop: "{{ export_objects }}"

  - name: Add notification_templates
    when: item == "notification_templates"
    ansible.builtin.include_role:
      name: notification_templates
    loop: "{{ export_objects }}"

  - name: Add schedules
    when: item == "schedules"
    ansible.builtin.include_role:
      name: schedules
    loop: "{{ export_objects }}"

