---
- name: Export config as code info from AWX, AAP, or Ascender
  #hosts: save-files
  hosts: localhost
  gather_facts: false
  vars:
    controller_configuration_inventories_enforce_defaults: true
  
    export_objects: 
#      - applications #failed
#      - credentials #some work some fail
#      - credential_types #works
#      - execution_environments #failed conditional
#      - inventory #works
#      - inventory_sources #fails
#      - job_templates
#      - notification_templates
#      - organizations #fails
#      - projects #fails
#      - schedules #fails
#      - teams #works
#      - users #fails
#      - workflow_job_templates
  
  environment:
    CONTROLLER_HOST: "https://{{ import_host }}"
    CONTROLLER_USERNAME: "{{ gen2_user }}"
    CONTROLLER_PASSWORD: "{{ gen2_pword }}"
    CONTROLLER_VERIFY_SSL: False

  tasks:
  - name: Include vars from config folder
    ansible.builtin.include_vars:
      # file: inventory.yml
      dir: configs

  - name: Filter out users we don't want imported
    set_fact:
      filtered_users: "{{ users | rejectattr('natural_key.username', 'equalto', 'admin') | list }}"
 

  - name: debug data
    ansible.builtin.debug:
      # var: inventory.variables
      var: filtered_users

  - name: Add controller user  # noqa fqcn[action-core]
    awx.awx.user:
      username:                 "{{ __controller_user_accounts_item.user | default(__controller_user_accounts_item.username) | mandatory }}"
      new_username:             "{{ __controller_user_accounts_item.new_username | default(omit, true) }}"
      # the 'true' in the second default leads to no password being set if the default password is empty
      password:                 "{{ __controller_user_accounts_item.password | default(controller_user_default_password | default(omit, true)) }}"
      email:                    "{{ __controller_user_accounts_item.email | default(omit, true) }}"
      first_name:               "{{ __controller_user_accounts_item.firstname | default(__controller_user_accounts_item.first_name | default(omit, true)) }}"
      last_name:                "{{ __controller_user_accounts_item.lastname | default(__controller_user_accounts_item.last_name | default(omit, true)) }}"
      is_superuser:             "{{ __controller_user_accounts_item.is_superuser | default(__controller_user_accounts_item.superuser | default(( false if controller_configuration_users_enforce_defaults else omit))) }}"
      is_system_auditor:        "{{ __controller_user_accounts_item.is_auditor | default(__controller_user_accounts_item.is_system_auditor | default(( false if controller_configuration_users_enforce_defaults else omit))) }}"
      update_secrets:           "{{ __controller_user_accounts_item.update_secrets | default(( false if controller_configuration_users_enforce_defaults else omit)) }}"
      organization:             "{{ __controller_user_accounts_item.organization | default(omit) }}"
      state:                    "{{ __controller_user_accounts_item.state | default(controller_state | default(omit, true)) }}"

    loop: "{{ users if users is defined else controller_user_accounts }}"
    loop_control:
      loop_var: __controller_user_accounts_item
#    no_log: "{{ controller_configuration_users_secure_logging }}"
#    async: 1000
#    poll: 0
    register: __controller_user_accounts_job_async
    changed_when: not __controller_user_accounts_job_async.changed
    vars:
      # ansible_async_dir: '{{ controller_configuration_async_dir }}'
      controller_configuration_users_enforce_defaults: false
      
  - name: Add organizations
    when: item == "organizations"
    ansible.builtin.include_role:
      name: organizations
    loop: "{{ export_objects }}"

  - name: Add teams
    when: item == "teams"
    ansible.builtin.include_role:
      name: teams
    loop: "{{ export_objects }}"

  - name: Add users
    when: item == "users"
    ansible.builtin.include_role:
      name: users
    loop: "{{ export_objects }}"

  - name: Add credential types
    when: item == "credential_types"
    ansible.builtin.include_role:
      name: credential_types
    loop: "{{ export_objects }}"

  - name: Add credentials
    when: item == "credentials"
    ansible.builtin.include_role:
      name: credentials
    loop: "{{ export_objects }}"

  - name: Add inventory
    when: item == "inventory"
    ansible.builtin.include_role:
      # name: infra.controller_configuration.inventories
      name: inventories
    loop: "{{ export_objects }}"

  - name: Add inventory sources
    when: item == "inventory_sources"
    ansible.builtin.include_role:
      name: inventory_sources
    loop: "{{ export_objects }}"

  - name: Add applications
    when: item == "applications"
    ansible.builtin.include_role:
      name: applications
    loop: "{{ export_objects }}"

  - name: Add execution_environments
    when: item == "execution_environments"
    ansible.builtin.include_role:
      name: execution_environments
    loop: "{{ export_objects }}"

  - name: Add projects
    when: item == "projects"
    ansible.builtin.include_role:
      name: projects
    loop: "{{ export_objects }}"

  - name: Add schedules
    when: item == "schedules"
    ansible.builtin.include_role:
      name: schedules
    loop: "{{ export_objects }}"

  - name: Add job_templates
    when: item == "job_templates"
    ansible.builtin.include_role:
      name: job_templates
    loop: "{{ export_objects }}"

  - name: Add workflow_job_templates
    when: item == "workflow_job_templates"
    ansible.builtin.include_role:
      name: workflow_job_templates
    loop: "{{ export_objects }}"

  - name: Add notification_templates
    when: item == "notification_templates"
    ansible.builtin.include_role:
      name: notification_templates
    loop: "{{ export_objects }}"
